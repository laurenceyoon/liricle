/*!
 * liricle v3.1.1
 * javascript lyric synchronizer library
 * https://github.com/mcanam/liricle
 * MIT license by mcanam
 */
!function(t,n){"object"==typeof exports&&"undefined"!=typeof module?module.exports=n():"function"==typeof define&&define.amd?define(n):(t="undefined"!=typeof globalThis?globalThis:t||self).Liricle=n()}(this,(function(){"use strict";const t=/\[([a-z]+):(.*)\]/i,n=/<\d{2}:\d{2}(.\d{2,})?>\s*[^\s|<]*/g,e=/\[\d{2}:\d{2}(.\d{2,})?\]/g,i=/<\d{2}:\d{2}(.\d{2,})?>/g;function r(n){const i=n.split(/\r?\n/),r={tags:{},lines:[],enhanced:c(n)};return i.forEach((n=>{const i=function(n){const e=n.match(t);if(!e)return;return{name:e[1],value:e[2].trim()}}(n),c=function(t){const n=t.match(e),i=[];if(!n)return;return n.forEach((n=>{i.push({time:o(n),text:u(t),words:s(t)})})),i}(n);i&&(r.tags[i.name]=i.value),c&&r.lines.push(...c)})),r.lines=function(t){return t.sort(((t,n)=>t.time-n.time))}(r.lines),r}function o(t){let n=t.replace(/\[|\]|<|>/g,"");return n=function(t){let[n,e]=t.split(":");return n=60*parseFloat(n),e=parseFloat(e),n+e}(n),n}function s(t){const e=t.match(n),r=[];return e?(e.forEach((t=>{const n=t.match(i)[0];r.push({time:o(n),text:u(t)})})),r):null}function u(t){let n=t.replace(e,"");return n=n.replace(i,""),n.trim()}function c(t){return i.test(t)}function l(t,n){let e=null,i=null;if(e=function(t,n){const e=a(t,n);return null!=e?{index:e,...t[e]}:null}(t.lines,n),null!=e&&t.enhanced){i=function(t,n){if(null==t)return t;const e=a(t,n);return null!=e?{index:e,...t[e]}:null}(e.words,n),delete e.words}return{line:e,word:i}}function a(t,n){const e=[];if(t.forEach((t=>{const i=n-t.time;i>=0&&e.push(i)})),0==e.length)return null;const i=Math.min(...e);return e.indexOf(i)}return class{#t=null;#n=null;#e=()=>{};#i=()=>{};constructor(){this.data=null}async init(t){if(t&&t.url)try{const n=await fetch(t.url);if(!n.ok)throw Error(`${n.status} ${n.statusText} (${n.url})`);const e=await n.text();this.data=r(e)}catch(t){throw Error(`Liricle.init(): ${t.message}`)}else{if(!t||!t.text)throw Error("Liricle.init(): missing argument");this.data=r(t.text)}this.#e(this.data)}sync(t,n=0,e=!1){if(null==t)throw Error("Liricle.sync(): missing 'time' argument");if("number"!=typeof t)throw Error("Liricle.sync(): 'time' argument must be a number!");if("number"!=typeof n)throw Error("Liricle.sync(): 'offset' argument must be a number!");if("boolean"!=typeof e)throw Error("Liricle.sync(): 'continuous' argument must be a boolean!");const{line:i,word:r}=l(this.data,t+n);if(null!=i||null!=r){if(this.data.enhanced&&null!=r){if(0==e&&i.index==this.#t&&r.index==this.#n)return;this.#t=i.index,this.#n=r.index}else{if(0==e&&i.index==this.#t)return;this.#t=i.index}this.#i(i,r)}}on(t,n){if("function"!=typeof n)throw Error("Liricle.on(): 'callback' argument must be a function!");switch(t){case"init":this.#e=n;break;case"sync":this.#i=n}}}}));
//# sourceMappingURL=liricle.min.js.map
