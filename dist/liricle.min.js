/*!
 * liricle v3.0.0
 * javascript lyric synchronizer library
 * https://github.com/mcanam/liricle
 * MIT license by mcanam
 */
var n,t;n=this,t=function(){"use strict";const n=/\[([a-z]+):(.+)\]/i,t=/\[\d{2}:\d{2}(.\d{2,})?\]{1,}/g,e=/(<\d{2}:\d{2}.\d{2,}>\s{0,}([^\s]+))/g,i=/<\d{2}:\d{2}(.\d{2,})?>/,s={lines:[],tags:{},enhanced:!1};function c(e){return i.test(e)&&(s.enhanced=!0),e.split(/\r|\n/).forEach((e=>{!function(t){const e=t.match(n);if(null==e)return;const i=e[1],c=e[2].trim();s.tags[i]=c}(e),function(n){const e=n.match(t);null!=e&&e.forEach((t=>{s.lines.push({time:o(t),text:r(n),words:l(n)})}))}(e)})),s.lines=function(n){return n.sort(((n,t)=>n.time-t.time))}(s.lines),s}function l(n){const t=n.match(e),s=[];return null==t?null:(t.forEach((n=>{const t=n.match(i)[0];s.push({time:o(t),text:r(n)})})),s)}function r(n){return(n=(n=n.replace(t,"")).replace(e,"$2")).trim()}function o(n){n=(n=n.replace(/\[|\]|<|>/g,"")).split(":");let[t,e]=n;return t=60*parseInt(t),e=parseFloat(e),t+e}function u(n,t){let e=function(n,t){const e=n.lines,i=a(e,t);return null!=i?{index:i,...e[i]}:null}(n,t),i=null!=e&&n.enhanced?function(n,t){const e=n.words;if(null==e)return null;const i=a(e,t);return null!=i?{index:i,...e[i]}:null}(e,t):null;return null!=e&&delete e.words,{line:e,word:i}}function a(n,t){const e=[];if(n.forEach((n=>{const i=t-n.time;i>=0&&e.push(i)})),0==e.length)return null;const i=Math.min(...e);return e.indexOf(i)}return class{constructor(){this.activeLine=null,this.activeWord=null,this.onInit=()=>{},this.onSync=()=>{},this.data=null}async init({text:n,url:t}){let e=n;if(t)try{const n=await fetch(t);e=await n.text()}catch(n){throw Error(n)}this.data=c(e),this.onInit(this.data)}sync(n,t=0,e=!1){const{line:i,word:s}=u(this.data,n+t);if(null!=i||null!=s){if(this.data.enhanced&&null!=s){if(0==e&&i.index==this.activeLine&&s.index==this.activeWord)return;this.activeLine=i.index,this.activeWord=s.index}else{if(0==e&&i.index==this.activeLine)return;this.activeLine=i.index}this.onSync(i,s)}}on(n,t){if("function"!=typeof t)throw Error("callback must be a function!");switch(n){case"init":this.onInit=t;break;case"sync":this.onSync=t}}}},"object"==typeof exports&&"undefined"!=typeof module?module.exports=t():"function"==typeof define&&define.amd?define(t):(n="undefined"!=typeof globalThis?globalThis:n||self).Liricle=t();
//# sourceMappingURL=liricle.min.js.map
